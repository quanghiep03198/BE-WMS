name: Deploy app to Windows Server (Self-hosted)

on:
   push:
      branches:
         - develop

jobs:
   sonarcloud:
      name: SonarCloud
      runs-on: ubuntu-latest
      steps:
         - uses: actions/checkout@v4
           with:
              fetch-depth: 0
         - name: SonarCloud Scan
           uses: SonarSource/sonarcloud-github-action@master
           env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

   deploy-server-19:
      name: Deploy to server 19
      runs-on: [self-hosted, 'Server-19']
      steps:
         - uses: actions/checkout@v4
           with:
              fetch-depth: 0
              clean: false

         - name: Load environment variables
           shell: bash
           run: echo "${{ secrets.ENV_VARIABLE_SVR19 }}" > .env

         - name: Initialize Sentry CLI
           shell: bash
           run: |
              echo "[auth]" > .sentryclirc
              echo "token=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .sentryclirc

         - name: Install dependencies
           shell: bash
           run: npm install

         - name: Build Nest application
           shell: bash
           run: npm run build

         - name: Restart and save PM2 process
           shell: bash
           run: |
              pm2 restart ecosystem.config.js --update-env
              pm2 save

   deploy-server-51:
      name: Deploy to server 51
      # Temporarily disable this job
      if: false
      runs-on: [self-hosted, 'Server-51']
      steps:
         - uses: actions/checkout@v4
           with:
              fetch-depth: 0
              clean: false

         - name: Load environment variables
           shell: bash
           run: echo "${{ secrets.ENV_VARIABLE_SVR51 }}" > .env

         - name: Initialize Sentry CLI
           shell: bash
           run: |
              echo "[auth]" > .sentryclirc
              echo "token=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .sentryclirc

         - name: Install dependencies
           shell: bash
           run: npm install

         - name: Build Nest application
           shell: bash
           run: npm run build

         - name: Restart and save PM2 process
           shell: bash
           run: |
              pm2 restart ecosystem.config.js --update-env
              pm2 save
